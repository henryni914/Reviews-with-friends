[{"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\index.js":"1","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\App.js":"2","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\reportWebVitals.js":"3","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\utils\\auth0context.js":"4","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\pages\\Home.js":"5","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\utils\\API.js":"6","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\Footer.js":"7","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\AboutUs.js":"8","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\Navbar.js":"9","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\LoginButton.js":"10","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\LogoutButton.js":"11","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\reducers\\index.js":"12","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\reducers\\user.js":"13","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\actions\\user.js":"14","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\PopularSection.js":"15","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\MovieCard.js":"16","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\reducers\\movies.js":"17","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\actions\\movies.js":"18","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\pages\\MovieSearch.js":"19","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\MovieItem.js":"20"},{"size":646,"mtime":1610672123215,"results":"21","hashOfConfig":"22"},{"size":1004,"mtime":1610772722704,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1610670082480,"results":"24","hashOfConfig":"22"},{"size":2284,"mtime":1610670082482,"results":"25","hashOfConfig":"22"},{"size":465,"mtime":1610772067946,"results":"26","hashOfConfig":"22"},{"size":389,"mtime":1610685886741,"results":"27","hashOfConfig":"22"},{"size":149,"mtime":1610670082477,"results":"28","hashOfConfig":"22"},{"size":1575,"mtime":1610670082476,"results":"29","hashOfConfig":"22"},{"size":2495,"mtime":1610767780554,"results":"30","hashOfConfig":"22"},{"size":346,"mtime":1610670082477,"results":"31","hashOfConfig":"22"},{"size":333,"mtime":1610670082478,"results":"32","hashOfConfig":"22"},{"size":158,"mtime":1610733715778,"results":"33","hashOfConfig":"22"},{"size":807,"mtime":1610677573547,"results":"34","hashOfConfig":"22"},{"size":425,"mtime":1610671854408,"results":"35","hashOfConfig":"22"},{"size":1763,"mtime":1610749280794,"results":"36","hashOfConfig":"22"},{"size":1086,"mtime":1610759320558,"results":"37","hashOfConfig":"22"},{"size":539,"mtime":1610749280796,"results":"38","hashOfConfig":"22"},{"size":253,"mtime":1610749280791,"results":"39","hashOfConfig":"22"},{"size":3211,"mtime":1610771253789,"results":"40","hashOfConfig":"22"},{"size":767,"mtime":1610759320558,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"13l3jlq",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\index.js",[],["88","89"],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\App.js",["90"],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\reportWebVitals.js",[],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\utils\\auth0context.js",[],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\pages\\Home.js",["91","92","93","94","95"],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\utils\\API.js",["96"],"import axios from \"axios\"\n\nconst tmdbAPI = process.env.REACT_APP_TMDB_API_KEY\n\nexport default {\n\n    searchMovies: function(search){\n        return axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${tmdbAPI}&query=${search}`)\n    },\n\n    popularMovies: function(){\n        return axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${tmdbAPI}&language=en-US`)\n    }\n}","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\Footer.js",[],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\AboutUs.js",[],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\Navbar.js",["97","98"],"import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Input, Menu, Form } from 'semantic-ui-react';\nimport LoginButton from '../components/LoginButton';\nimport LogoutButton from '../components/LogoutButton';\nimport { useAuth0 } from '../utils/auth0context';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setUser } from '../actions/user';\nimport { updateSearch } from '../actions/movies'\nimport API from '../utils/API';\n\nexport default function Nav() {\n\n  const [search, setSearch] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [redirect, setRedirect] = useState(null);\n  const { user } = useAuth0();\n  // console.log('from auth0', user);\n  const dispatch = useDispatch();\n  const stateUser = useSelector(state => state.movies)\n\n  function handleInputChange(event) {\n    // console.log('event', event.target.value)\n    setSearch(event.target.value);\n  }\n\n  function handleFormSubmit() {\n    if (search.length < 1) {\n      return;\n    }\n    API.searchMovies(search)\n      .then(res => {\n        console.log('from API', res.data)\n        dispatch(updateSearch(search, res.data.results))\n        setResults(res.data.results);\n        // create an API that pulls a req params /results/q=:search so if user manually uses url bar\n        setRedirect(\"/results/q=\" + search);\n        setSearch(\"\");\n      })\n      .catch(err => console.log(err)); \n  }\n  \n\n  useEffect(() => {\n    if (user) {\n      dispatch(setUser(user));\n      // console.log('user set');\n      // console.log('stateMovies',stateUser)\n    }\n  }, [results]);\n\n  return (\n    <>\n      <Menu inverted borderless>\n        <Menu.Item\n          name='home'\n          href=\"/\"\n        />\n        <Menu.Item\n          name='movies'\n          // href=\"/\"\n        />\n        <Menu.Item\n          name='profile'\n        />\n        <Menu.Menu position='right'>\n\n          {/* need to add a search function for user input */}\n          <Menu.Item>\n            <Form onSubmit={handleFormSubmit}>\n              <Input icon='search' placeholder='Search...' value={search} onChange={handleInputChange} />\n            </Form>\n          </Menu.Item>\n          <Menu.Item>\n            {!(user) && (\n              <LoginButton />\n            )}\n            {(user) && (\n              <LogoutButton />\n            )}\n          </Menu.Item>\n        </Menu.Menu>\n      </Menu>\n      {redirect && (\n        <Redirect to={redirect} />\n      )}      \n    </>\n  )\n}\n\n\n","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\LoginButton.js",[],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\LogoutButton.js",[],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\reducers\\index.js",[],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\reducers\\user.js",[],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\actions\\user.js",[],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\PopularSection.js",["99","100","101","102"],"import React, { useEffect, useState } from 'react';\r\nimport { Card, Container } from 'semantic-ui-react';\r\nimport MovieCard from './MovieCard';\r\nimport API from '../utils/API';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setTopFive } from '../actions/movies';\r\n\r\nexport default function PopularSection() {\r\n \r\n    const [movies, setMovies] = useState([])\r\n\r\n    // call API or pass props to load the first 5 popular movies from TMDB\r\n    useEffect(() => {\r\n        API.popularMovies()\r\n            .then(res => { setMovies(res.data.results.slice(0, 5)) })\r\n            .catch(err => console.log(err));\r\n    }, [])\r\n\r\n    // console.log('movies', movies)\r\n\r\n// Using redux to store movie to state, and retrieving from state to render\r\n// The below was a test and works, use as reference if needed.\r\n\r\n    // const dispatch = useDispatch();\r\n    // useEffect(() => {\r\n    //     API.popularMovies()\r\n    //         .then(res => { dispatch(setTopFive(res.data.results.slice(0,5))) })\r\n    //         .catch(err => console.log(err));\r\n    // }, [])\r\n\r\n    // const stateMovies = useSelector(state => state.movies.topFive);\r\n\r\n    // console.log('stateMovies' , stateMovies);\r\n\r\n    return (\r\n        <Container>\r\n            <h2>Trending movies this week!</h2>\r\n            <Card.Group itemsPerRow={5} stackable>\r\n                {movies.map(element => (\r\n                    <MovieCard\r\n                        id={element.id}\r\n                        title={element.original_title}\r\n                        overview={element.overview}\r\n                        poster={element.poster_path}\r\n                        release={element.release_date}\r\n                    />\r\n                ))}\r\n            </Card.Group>\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\n{/* <MovieCard test = {stateMovies}/> */}","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\MovieCard.js",["103","104"],"import React from 'react';\nimport { Card, Icon } from 'semantic-ui-react';\n\nexport default function MovieCard(props) {\n    // console.log('movieCard', props)\n    let posterUrl = (\"https://image.tmdb.org/t/p/original\" + props.poster)\n    let shortSummary = props.overview.split(\" \").slice(0,20).join(\" \") + \"...\";\n\n    return (\n        <Card >\n            <img \n            class='popular-img'\n            src={posterUrl}\n            alt={props.title}\n            height=\"300px\"\n            ></img>\n            <Card.Content>\n                <Card.Header>{props.title}</Card.Header>\n                <Card.Meta><strong>Release Date: </strong> {props.release}</Card.Meta>\n                {/* <Card.Description>\n                    {shortSummary}\n                </Card.Description> */}\n            </Card.Content>\n            {/* the extra content can be removed or changed later */}\n            {/* <Card.Content extra>\n                <a>\n                    <Icon name='user' />\n                    10 Friends\n                </a>\n            </Card.Content> */}\n        </Card>\n    )\n}","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\reducers\\movies.js",[],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\actions\\movies.js",[],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\pages\\MovieSearch.js",["105","106","107","108"],"import React, { useEffect, useState } from 'react';\nimport Navbar from '../components/Navbar';\nimport MovieItem from '../components/MovieItem';\nimport { useSelector } from \"react-redux\";\nimport { Container, Divider, Grid, Item, Menu } from 'semantic-ui-react'\n\nexport default function MovieDisplay() {\n\n    const storeMovies = useSelector(state => state.movies);\n    const resultsArr = storeMovies.searchResults;\n    console.log(\"stateMovies\", storeMovies);\n    const [search, setSearch] = useState(storeMovies.search)\n\n    // ************\n    // Need to save the search keyword and the result either to local storage or another method to keep state before page refresh\n\n    // useEffect(() => {\n    //     if (storeMovies.search !== \"\"){\n    //         setSearch(storeMovies.search)\n    //         console.log('search', search)\n\n    //     }\n    // },[search]);\n\n    return (\n        <>\n            <Container>\n                <Grid columns='equal'>\n                    <Grid.Column width={3}>\n                        <Menu text vertical>\n                            <Menu.Item header>Sort By</Menu.Item>\n                            <Menu.Item\n                                name='closest'\n                                // active={activeItem === 'closest'}\n                                // onClick={this.handleItemClick}\n                            />\n                            <Menu.Item\n                                name='mostComments'\n                                // active={activeItem === 'mostComments'}\n                                // onClick={this.handleItemClick}\n                            />\n                            <Menu.Item\n                                name='mostPopular'\n                                // active={activeItem === 'mostPopular'}\n                                // onClick={this.handleItemClick}\n                            />\n                        </Menu>\n                    </Grid.Column>\n                    <Grid.Column width={10}>\n                        <h3>Search results from \"{storeMovies.search}\"</h3>\n                        {resultsArr.length < 1 ?\n                            <h1>No results</h1>\n                            :\n                            <>\n                                <Item.Group>\n                                    {resultsArr.map(element => (\n                                        <>\n                                            <MovieItem\n                                                id={element.id}\n                                                title={element.original_title}\n                                                overview={element.overview}\n                                                poster={element.poster_path}\n                                                release={element.release_date}\n                                            />\n                                            <Divider section />\n                                        </>\n                                    ))}\n                                </Item.Group>\n                            </>\n                        }\n                    </Grid.Column>\n                </Grid>\n            </Container>\n        </>\n    )\n}","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\MovieItem.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":14},{"ruleId":"113","severity":1,"message":"117","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"118","line":1,"column":28,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},{"ruleId":"113","severity":1,"message":"114","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":14},{"ruleId":"113","severity":1,"message":"119","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":14},{"ruleId":"113","severity":1,"message":"120","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":11},{"ruleId":"121","severity":1,"message":"122","line":5,"column":1,"nodeType":"123","endLine":14,"endColumn":2},{"ruleId":"113","severity":1,"message":"124","line":20,"column":9,"nodeType":"115","messageId":"116","endLine":20,"endColumn":18},{"ruleId":"125","severity":1,"message":"126","line":50,"column":6,"nodeType":"127","endLine":50,"endColumn":15,"suggestions":"128"},{"ruleId":"113","severity":1,"message":"129","line":5,"column":10,"nodeType":"115","messageId":"116","endLine":5,"endColumn":21},{"ruleId":"113","severity":1,"message":"130","line":5,"column":23,"nodeType":"115","messageId":"116","endLine":5,"endColumn":34},{"ruleId":"113","severity":1,"message":"131","line":6,"column":10,"nodeType":"115","messageId":"116","endLine":6,"endColumn":20},{"ruleId":"132","severity":1,"message":"133","line":54,"column":1,"nodeType":"134","messageId":"135","endLine":54,"endColumn":42},{"ruleId":"113","severity":1,"message":"136","line":2,"column":16,"nodeType":"115","messageId":"116","endLine":2,"endColumn":20},{"ruleId":"113","severity":1,"message":"137","line":7,"column":9,"nodeType":"115","messageId":"116","endLine":7,"endColumn":21},{"ruleId":"113","severity":1,"message":"117","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"114","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":14},{"ruleId":"113","severity":1,"message":"138","line":12,"column":12,"nodeType":"115","messageId":"116","endLine":12,"endColumn":18},{"ruleId":"113","severity":1,"message":"139","line":12,"column":20,"nodeType":"115","messageId":"116","endLine":12,"endColumn":29},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'Footer' is defined but never used.","'API' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'stateUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["142"],"'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'setTopFive' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Icon' is defined but never used.","'shortSummary' is assigned a value but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},"Update the dependencies array to be: [dispatch, results, user]",{"range":"145","text":"146"},[1601,1610],"[dispatch, results, user]"]