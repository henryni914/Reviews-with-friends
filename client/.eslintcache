[{"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\index.js":"1","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\App.js":"2","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\reportWebVitals.js":"3","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\utils\\auth0context.js":"4","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\pages\\Home.js":"5","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\utils\\API.js":"6","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\Footer.js":"7","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\AboutUs.js":"8","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\Navbar.js":"9","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\LoginButton.js":"10","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\LogoutButton.js":"11","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\reducers\\index.js":"12","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\reducers\\user.js":"13","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\actions\\user.js":"14","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\PopularSection.js":"15","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\MovieCard.js":"16","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\reducers\\movies.js":"17","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\actions\\movies.js":"18","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\pages\\MovieSearch.js":"19","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\MovieItem.js":"20","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\pages\\MoviePage.js":"21"},{"size":646,"mtime":1610863058355,"results":"22","hashOfConfig":"23"},{"size":1052,"mtime":1610947073917,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1610863058357,"results":"25","hashOfConfig":"23"},{"size":2284,"mtime":1610863058359,"results":"26","hashOfConfig":"23"},{"size":465,"mtime":1610863058356,"results":"27","hashOfConfig":"23"},{"size":774,"mtime":1610947073925,"results":"28","hashOfConfig":"23"},{"size":1575,"mtime":1610991071169,"results":"29","hashOfConfig":"23"},{"size":1575,"mtime":1610863058352,"results":"30","hashOfConfig":"23"},{"size":2338,"mtime":1610990575961,"results":"31","hashOfConfig":"23"},{"size":346,"mtime":1610863058353,"results":"32","hashOfConfig":"23"},{"size":333,"mtime":1610863058353,"results":"33","hashOfConfig":"23"},{"size":151,"mtime":1610863058357,"results":"34","hashOfConfig":"23"},{"size":777,"mtime":1610863058357,"results":"35","hashOfConfig":"23"},{"size":412,"mtime":1610863058351,"results":"36","hashOfConfig":"23"},{"size":1664,"mtime":1610947073921,"results":"37","hashOfConfig":"23"},{"size":1418,"mtime":1610947073918,"results":"38","hashOfConfig":"23"},{"size":703,"mtime":1610942731922,"results":"39","hashOfConfig":"23"},{"size":355,"mtime":1610942731915,"results":"40","hashOfConfig":"23"},{"size":3661,"mtime":1610949989869,"results":"41","hashOfConfig":"23"},{"size":1473,"mtime":1610947073919,"results":"42","hashOfConfig":"23"},{"size":2187,"mtime":1610951307139,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"13l3jlq",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"46"},"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\index.js",[],["95","96"],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\App.js",["97"],"import './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from './pages/Home';\nimport SearchPage from './pages/MovieSearch';\nimport MoviePage from './pages/MoviePage';\nimport Navbar from './components/Navbar';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Auth0Provider } from './utils/auth0context';\nimport Nav from './components/Navbar';\nimport Footer from './components/Footer';\n\n\nexport default function App() {\n\n  return (\n    <Router>\n      <Auth0Provider>\n        <div className=\"App\">\n          <Nav />\n          <Route exact path=\"/\" component={Home} />\n          {/* Need to make content take up 100vh in SearchPage to fill up\n           empty space or else footer will rise ex. when no results*/}\n          <Route path=\"/results/q=:query\" component={SearchPage} />\n          <Route path=\"/film/id=:filmId\" component={MoviePage} />\n          <section id='footer'>\n            <Footer />\n          </section>\n        </div>\n      </Auth0Provider>\n    </Router>\n\n  );\n}\n","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\reportWebVitals.js",[],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\utils\\auth0context.js",[],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\pages\\Home.js",["98","99","100","101","102"],"import { React, useEffect, useState } from 'react';\nimport Navbar from '../components/Navbar';\nimport AboutUs from '../components/AboutUs';\nimport Footer from '../components/Footer';\nimport API from '../utils/API';\nimport PopularSection from '../components/PopularSection';\n\nexport default function Home() {\n\n    return (\n        <>\n            <section id='main-landing-section'></section>\n            <AboutUs />\n            <PopularSection />\n        </>\n    )\n}","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\utils\\API.js",["103"],"import axios from \"axios\"\n\nconst tmdbAPI = process.env.REACT_APP_TMDB_API_KEY\n\nexport default {\n    \n    searchMovies: function(search){\n        return axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${tmdbAPI}&query=${search}`)\n    },\n    popularMovies: function(){\n        return axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${tmdbAPI}&language=en-US`)\n    },\n    findByMovieId: function(id){\n        return axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${tmdbAPI}&language=en-US`)\n    },\n    findProviders: function(id){\n        return axios.get(`https://api.themoviedb.org/3/movie/${id}/watch/providers?api_key=${tmdbAPI}`)\n    }\n}\n\n// findByMovieId: function(id){\n//     //     return axios.get(\"/film/id=\" + id)\n//     // },","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\Footer.js",[],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\AboutUs.js",[],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\Navbar.js",["104"],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\LoginButton.js",[],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\LogoutButton.js",[],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\reducers\\index.js",[],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\reducers\\user.js",[],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\actions\\user.js",[],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\PopularSection.js",["105"],"import React, { useEffect, useState } from 'react';\nimport { Card, Container } from 'semantic-ui-react';\nimport MovieCard from './MovieCard';\nimport API from '../utils/API';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setTopFive } from '../actions/movies';\n\nexport default function PopularSection() {\n \n    const [movies, setMovies] = useState([])\n\n    // call API or pass props to load the first 5 popular movies from TMDB\n    useEffect(() => {\n        API.popularMovies()\n            .then(res => { setMovies(res.data.results.slice(0, 5)) })\n            .catch(err => console.log(err));\n    }, [])\n\n    // console.log('movies', movies)\n\n// Using redux to store movie to state, and retrieving from state to render\n// The below was a test and works, use as reference if needed.\n\n    // const dispatch = useDispatch();\n    // useEffect(() => {\n    //     API.popularMovies()\n    //         .then(res => { dispatch(setTopFive(res.data.results.slice(0,5))) })\n    //         .catch(err => console.log(err));\n    // }, [])\n\n    // const stateMovies = useSelector(state => state.movies.topFive);\n\n    // console.log('stateMovies' , stateMovies);\n\n    return (\n        <Container>\n            <h2>Trending movies this week!</h2>\n            <Card.Group itemsPerRow={5} stackable>\n                {movies.map(element => (\n                    <MovieCard\n                        id={element.id}\n                        title={element.original_title}\n                        overview={element.overview}\n                        poster={element.poster_path}\n                        release={element.release_date}\n                    />\n                ))}\n            </Card.Group>\n        </Container>\n\n    )\n}\n\n{/* <MovieCard test = {stateMovies}/> */}","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\MovieCard.js",["106","107"],"import React from 'react';\nimport { Card, Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nexport default function MovieCard(props) {\n    // console.log('movieCard', props)\n    let posterUrl = (\"https://image.tmdb.org/t/p/original\" + props.poster)\n    let shortSummary = props.overview.split(\" \").slice(0, 20).join(\" \") + \"...\";\n\n    return (\n        <Card >\n            <Link to={`/film/id=${props.id}`}>\n                <img\n                    class='popular-img'\n                    src={posterUrl}\n                    alt={props.title}\n                    height=\"300px\"\n                ></img>\n            </Link>\n            <Card.Content>\n                <Card.Header>{props.title}</Card.Header>\n                <Card.Meta><strong>Release Date: </strong> {props.release}</Card.Meta>\n                {/* <Card.Description>\n                    {shortSummary}\n                </Card.Description> */}\n            </Card.Content>\n            {/* the extra content can be removed or changed later */}\n            {/* <Card.Content extra>\n                <a>\n                    <Icon name='user' />\n                    10 Friends\n                </a>\n            </Card.Content> */}\n        </Card>\n    )\n}","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\reducers\\movies.js",[],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\actions\\movies.js",[],"C:\\Users\\henry\\Reviews-with-friends\\client\\src\\pages\\MovieSearch.js",["108"],"import React, { useEffect, useState } from 'react';\nimport MovieItem from '../components/MovieItem';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Divider, Grid, Item, Menu } from 'semantic-ui-react';\nimport API from '../utils/API';\nimport { updateSearch } from '../actions/movies';\n\nexport default function MovieDisplay() {\n\n    const dispatch = useDispatch();\n    const storeMovies = useSelector(state => state.movies);\n    const resultsArr = storeMovies.searchResults;\n    const [search, setSearch] = useState(storeMovies.search);\n    const currentSearch = window.location.href.slice(32);\n\n    // ************\n    // Need to save the search keyword and the result either to local storage or another method to keep state before page refresh\n    // Also, need to grab the query in the url when user clicks back on their browser to see if its diff \n    // than what is current the search term in the store, if diff re-run the API\n\n    useEffect(() => {\n        if (currentSearch !== search) {\n            console.log('different')\n            API.searchMovies(currentSearch)\n                .then(res => {\n                    dispatch(updateSearch(search, res.data.results))\n                    setSearch(\"\");\n                })\n                .catch(err => console.log(err));\n        }\n    },[currentSearch]);\n\n    return (\n        <>\n            <Container>\n                <Grid columns='equal'>\n                    <Grid.Column width={3}>\n                        <Menu text vertical>\n                            <Menu.Item header>Sort By</Menu.Item>\n                            <Menu.Item\n                                name='closest'\n                            // active={activeItem === 'closest'}\n                            // onClick={this.handleItemClick}\n                            />\n                            <Menu.Item\n                                name='mostComments'\n                            // active={activeItem === 'mostComments'}\n                            // onClick={this.handleItemClick}\n                            />\n                            <Menu.Item\n                                name='mostPopular'\n                            // active={activeItem === 'mostPopular'}\n                            // onClick={this.handleItemClick}\n                            />\n                        </Menu>\n                    </Grid.Column>\n                    <Grid.Column width={10}>\n                        <h3>Search results from \"{currentSearch}\"</h3>\n                        {resultsArr.length < 1 ?\n                            <h1>No results</h1>\n                            :\n                            <>\n                                <Item.Group >\n                                    {resultsArr.map(element => (\n                                        <>\n                                            <MovieItem\n                                                id={element.id}\n                                                title={element.original_title}\n                                                overview={element.overview}\n                                                poster={element.poster_path}\n                                                release={element.release_date}\n                                            />\n                                            <Divider section />\n                                        </>\n                                    ))}\n                                </Item.Group>\n                            </>\n                        }\n                    </Grid.Column>\n                </Grid>\n            </Container>\n        </>\n    )\n}","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\components\\MovieItem.js",["109"],"import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Item } from 'semantic-ui-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilm } from '../actions/movies'\n\nexport default function MovieItem(props) {\n    // console.log('props', props.id)\n    let posterUrl = (\"https://image.tmdb.org/t/p/original\" + props.poster)\n    let filmId = props.id\n    const dispatch = useDispatch();\n    const storeMovies = useSelector(state => state.movies)\n    function storeId(id) {\n        console.log('id',id)\n        // let selected = stateMovies.filter(element => element.id === id);\n        dispatch(setFilm(id));\n        // console.log('selected', selected);\n    }\n\n    // useEffect(() => {\n    //     storeId()\n    // }, []);\n    \n    return (\n        <Item >\n            <Link onClick={() => storeId(filmId)} to={`/film/id=${props.id}`} >\n                <img\n                    class='search-img'\n                    src={posterUrl}\n                    alt={props.title}\n                ></img>\n            </Link>\n            <Item.Content>\n                <Link to={`/film/id=${props.id}`} >\n                    <Item.Header as='a' >{props.title}</Item.Header>\n                </Link>\n                <Item.Description>\n                    <p><strong>Release Date: </strong>{props.release}</p>\n                    <strong>Summary</strong>\n                    <p>{props.overview}</p>\n                </Item.Description>\n            </Item.Content>\n        </Item>\n    )\n}","C:\\Users\\henry\\Reviews-with-friends\\client\\src\\pages\\MoviePage.js",["110"],"import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport API from '../utils/API';\nimport { Breadcrumb, Container, Image, Segment } from 'semantic-ui-react';\n\nexport default function MoviePage() {\n\n    const stateMovie = useSelector(state => state.movies);\n    const filmId = stateMovie.currentFilmId;\n    const [results, setResults] = useState([])\n    const backdrop = \"https://image.tmdb.org/t/p/original\" + results.backdrop_path\n    // concat logo_path to below url to get provider logo\n    // https://image.tmdb.org/t/p/original\n\n    useEffect(() => {\n        API.findByMovieId(filmId).then(res => {\n            setResults(res.data);\n        });\n        API.findProviders(filmId).then(res => {\n            console.log('providers', res.data.results);\n        })\n    }, [])\n\n    console.log('results', results)\n    return (\n        <>\n            {/* style={{height: '500px'}} */}\n            {/* <Image fluid src={backdrop} ></Image> */}\n            <Container textAlign='center'>\n                <Image src={backdrop} size='large'></Image>\n                <Breadcrumb>\n                    <Breadcrumb.Section link active>Home</Breadcrumb.Section>\n                    <Breadcrumb.Divider>/</Breadcrumb.Divider>\n                    <Breadcrumb.Section link>Registration</Breadcrumb.Section>\n                    <Breadcrumb.Divider>/</Breadcrumb.Divider>\n                    <Breadcrumb.Section link>Personal Information</Breadcrumb.Section>\n                </Breadcrumb>\n                <Segment.Group>\n                    <Segment>Top</Segment>\n                    <Segment.Group>\n                        <Segment>Nested Top</Segment>\n                        <Segment>Nested Middle</Segment>\n                        <Segment>Nested Bottom</Segment>\n                    </Segment.Group>\n                    <Segment.Group horizontal>\n                        <Segment>Top</Segment>\n                        <Segment>Middle</Segment>\n                        <Segment>Bottom</Segment>\n                    </Segment.Group>\n                    <Segment>Bottom</Segment>\n                </Segment.Group>\n            </Container>\n        </>\n    )\n}",{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":7,"column":8,"nodeType":"117","messageId":"118","endLine":7,"endColumn":14},{"ruleId":"115","severity":1,"message":"119","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":26},{"ruleId":"115","severity":1,"message":"120","line":1,"column":28,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"115","severity":1,"message":"116","line":2,"column":8,"nodeType":"117","messageId":"118","endLine":2,"endColumn":14},{"ruleId":"115","severity":1,"message":"121","line":4,"column":8,"nodeType":"117","messageId":"118","endLine":4,"endColumn":14},{"ruleId":"115","severity":1,"message":"122","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":11},{"ruleId":"123","severity":1,"message":"124","line":5,"column":1,"nodeType":"125","endLine":19,"endColumn":2},{"ruleId":"126","severity":1,"message":"127","line":47,"column":6,"nodeType":"128","endLine":47,"endColumn":12,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":51,"column":1,"nodeType":"132","messageId":"133","endLine":51,"endColumn":43},{"ruleId":"115","severity":1,"message":"134","line":2,"column":16,"nodeType":"117","messageId":"118","endLine":2,"endColumn":20},{"ruleId":"115","severity":1,"message":"135","line":9,"column":9,"nodeType":"117","messageId":"118","endLine":9,"endColumn":21},{"ruleId":"126","severity":1,"message":"136","line":31,"column":7,"nodeType":"128","endLine":31,"endColumn":22,"suggestions":"137"},{"ruleId":"115","severity":1,"message":"138","line":4,"column":23,"nodeType":"117","messageId":"118","endLine":4,"endColumn":34},{"ruleId":"126","severity":1,"message":"139","line":22,"column":8,"nodeType":"128","endLine":22,"endColumn":10,"suggestions":"140"},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'Footer' is defined but never used.","'API' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'stateUser.email'. Either include them or remove the dependency array.","ArrayExpression",["143"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Icon' is defined but never used.","'shortSummary' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'search'. Either include them or remove the dependency array.",["144"],"'useSelector' is defined but never used.","React Hook useEffect has a missing dependency: 'filmId'. Either include it or remove the dependency array.",["145"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [dispatch, stateUser.email, user]",{"range":"152","text":"153"},"Update the dependencies array to be: [currentSearch, dispatch, search]",{"range":"154","text":"155"},"Update the dependencies array to be: [filmId]",{"range":"156","text":"157"},[1420,1426],"[dispatch, stateUser.email, user]",[1323,1338],"[currentSearch, dispatch, search]",[816,818],"[filmId]"]